# SPDX-FileCopyrightText: Magenta ApS
#
# SPDX-License-Identifier: MPL-2.0
default:
  # All jobs are interruptible by default
  interruptible: true

variables:
  IMAGE_SHA: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}
  TEST_IMAGE_SHA: ${CI_REGISTRY_IMAGE}/test:${CI_COMMIT_SHA}
  RELEASE_REGISTRY_IMAGE: index.docker.io/magentaaps/os2mo-frontend

  PRODUCT: os2mo
  COMPONENT: os2mo-frontend

stages:
  - sync
  - lint
  - build
  - test
  - release
  - deploy

# Conditions
############
.if-default-branch-refs: &if-default-branch-refs
  if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'

.if-tag: &if-tag
  if: '$CI_COMMIT_TAG'

.if-merge-request: &if-merge-request
  if: '$CI_MERGE_REQUEST_IID'

.if-schedule: &if-schedule
  if: '$CI_PIPELINE_SOURCE == "schedule"'


# Workflow
##########
workflow:
  rules:
    - <<: *if-tag
    - <<: *if-default-branch-refs
    - <<: *if-merge-request


include:
  - project: labs/salt-automation
    file:
      - gitlab-ci-templates/common/no-interrupt.v1.yml
      - gitlab-ci-templates/common/conventional-commits.v1.yml
      - gitlab-ci-templates/common/docker-build-meta.v1.yml
      - gitlab-ci-templates/common/docker-release.v1.yml
      - gitlab-ci-templates/common/config-updater-salt.v1.yml
      - gitlab-ci-templates/common/config-updater-flux.v1.yml
  - project: labs/salt-automation
    file: gitlab-ci-templates/common/pre-commit.v1.yml
    rules:
      - <<: *if-merge-request


# Build
#######
Build:
  extends:
    - .build-docker
  variables:
    CI_IMAGE: ${IMAGE_SHA}
    BUILD_DOCKER_EXTRA_FLAGS: --build-arg=COMMIT_SHA=${CI_COMMIT_SHA} --build-arg=COMMIT_TAG=${CI_COMMIT_TAG}
  rules:
    - <<: *if-schedule
      when: never
    - when: on_success

Build Test:
  extends:
    - .build-docker
  variables:
    CI_IMAGE: ${TEST_IMAGE_SHA}
    BUILD_DOCKER_EXTRA_FLAGS: --build-arg=COMMIT_SHA=${CI_COMMIT_SHA} --build-arg=COMMIT_TAG=${CI_COMMIT_TAG}
    TARGET: frontend
  rules:
    - <<: *if-merge-request


# Test
######
Unit-test:
  stage: test
  needs:
    - Build Test
  image: ${TEST_IMAGE_SHA}
  variables:
    GIT_STRATEGY: none
    BASE_URL: "http://mo"
    # $CI_JOB_ID is unique across parallel jobs, so this works as expected
    COVERAGE_FILE: $CI_PROJECT_DIR/.coverage.$CI_JOB_ID
  script:
    - cd /app/frontend
    - yarn install --dev
    - yarn test:unit
      --coverage
      --coverageReporters=cobertura
      --coverageReporters=html
      --coverageReporters=text-summary
      --coverageDirectory=$CI_PROJECT_DIR/coverage
  artifacts:
    when: always
    paths:
      - $CI_PROJECT_DIR/coverage
  rules:
    - <<: *if-merge-request
